// <auto-generated />
using System;
using MVC_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Project.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20240214234832_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Project.Models.Department", b =>
                {
                    b.Property<int>("DepartmentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentNumber"));

                    b.Property<int?>("ManagerSsn")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManagerStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentNumber");

                    b.HasIndex("ManagerSsn");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("MVC_Project.Models.Dependent", b =>
                {
                    b.Property<int?>("EmployeeSsn")
                        .HasColumnType("int");

                    b.Property<string>("DependentName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeSsn", "DependentName");

                    b.ToTable("dependents");
                });

            modelBuilder.Entity("MVC_Project.Models.Employee", b =>
                {
                    b.Property<int>("Ssn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ssn"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("SupuervisorSsn")
                        .HasColumnType("int");

                    b.HasKey("Ssn");

                    b.HasIndex("DepartmentNumber");

                    b.HasIndex("SupuervisorSsn");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVC_Project.Models.Project", b =>
                {
                    b.Property<int>("ProjectNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectNumber"));

                    b.Property<int?>("DepartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectNumber");

                    b.HasIndex("DepartmentNumber");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("MVC_Project.Models.WorksOn", b =>
                {
                    b.Property<int?>("EmployeeSsn")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectNumber")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("EmployeeSsn", "ProjectNumber");

                    b.HasIndex("ProjectNumber");

                    b.ToTable("worksOns");
                });

            modelBuilder.Entity("MVC_Project.Models.Department", b =>
                {
                    b.HasOne("MVC_Project.Models.Employee", "manager")
                        .WithMany("departments")
                        .HasForeignKey("ManagerSsn");

                    b.Navigation("manager");
                });

            modelBuilder.Entity("MVC_Project.Models.Dependent", b =>
                {
                    b.HasOne("MVC_Project.Models.Employee", "employee")
                        .WithMany("dependent")
                        .HasForeignKey("EmployeeSsn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("MVC_Project.Models.Employee", b =>
                {
                    b.HasOne("MVC_Project.Models.Department", "department")
                        .WithMany("employees")
                        .HasForeignKey("DepartmentNumber");

                    b.HasOne("MVC_Project.Models.Employee", "supervisor")
                        .WithMany("group")
                        .HasForeignKey("SupuervisorSsn");

                    b.Navigation("department");

                    b.Navigation("supervisor");
                });

            modelBuilder.Entity("MVC_Project.Models.Project", b =>
                {
                    b.HasOne("MVC_Project.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("DepartmentNumber");

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVC_Project.Models.WorksOn", b =>
                {
                    b.HasOne("MVC_Project.Models.Employee", "employee")
                        .WithMany("worksOns")
                        .HasForeignKey("EmployeeSsn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project.Models.Project", "project")
                        .WithMany("WorksOns")
                        .HasForeignKey("ProjectNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("MVC_Project.Models.Department", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("MVC_Project.Models.Employee", b =>
                {
                    b.Navigation("departments");

                    b.Navigation("dependent");

                    b.Navigation("group");

                    b.Navigation("worksOns");
                });

            modelBuilder.Entity("MVC_Project.Models.Project", b =>
                {
                    b.Navigation("WorksOns");
                });
#pragma warning restore 612, 618
        }
    }
}
